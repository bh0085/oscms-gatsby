{"version":3,"sources":["webpack:///./src/templates/supply_item.js"],"names":["query","ItemBody","supplyItem","className","to","data-wio-id","_meta","id","RichText","asText","item_title","the_problem","current_us_resources","src","item_image","url","props","doc","data","prismic","allMedical_supply_item_detaileds","edges","slice","pop","node"],"mappings":"2FAAA,0GAgBaA,EAAK,m4BAuCZC,EAAW,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAClB,OACE,6BACE,yBAAKC,UAAU,yBACb,yBAAKA,UAAU,QACb,kBAAC,OAAD,CAAMC,GAAG,KAAT,iBAGF,wBAAIC,cAAcH,EAAWI,MAAMC,IAC/BC,WAASC,OAAOP,EAAWQ,aAE/B,2CACA,6BACMF,WAASC,OAAOP,EAAWS,cAEjC,iDACA,6BACMH,WAASC,OAAOP,EAAWU,uBAEjC,yBAAKC,IAAKX,EAAWY,WAAWC,SAMzB,mBAACC,GAEd,IAAMC,EAAMD,EAAME,KAAKC,QAAQC,iCAAiCC,MAAMC,MAAM,EAAE,GAAGC,MAEjF,OAAIN,EAGF,kBAAC,IAAD,KACE,kBAAChB,EAAD,CAAUC,WAAae,EAAIO,QAJf","file":"component---src-templates-supply-item-js-b54d18dba5262d16e1a2.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { RichText } from 'prismic-reactjs'\nimport Layout from '../components/layouts' \n\n// Query for the custom content type in Prismic\n/*\nGG: quick python script to list all fields from custom type JSON (from e.g. https://open-source-medical-supplies.prismic.io/masks/medical_supply_item_detailed.json/ => JSON Editor)\n\nimport json\na = JSON HERE\ndat = json.loads(a)\nitems = [x for x in dat['Main']]\nfor item in items:\n    print(item)\n*/\nexport const query = graphql`\nquery SupplyItemQuery($id: String) {\n  prismic{\n    allMedical_supply_item_detaileds(id: $id){\n      edges{\n        node{\n          _meta{\n            id\n            type\n          }\n          item_title\n          item_image\n          the_problem\n          current_us_resources\n          worst_case_expectation\n          why_well_need_it\n          why_we_wont_need_it\n          engineering_requirements\n          assembly_fabrication_requirements\n          projects_resources\n          reviewed_designs_intro\n          reviewed_designs_item {\n            project_name\n            date_reviewed\n            reviewed_by\n            note\n          }\n          not_recommended_design_item {\n            project_name\n            reviewed_by\n            reason\n          }\n        }\n      }\n    }\n  }\n}\n`\n// Display the title, date, and content of the Item \nconst ItemBody = ({ supplyItem }) => {\n  return (\n    <div>\n      <div className=\"container post-header\">\n        <div className=\"back\">\n          <Link to=\"/\">back to list</Link>\n        </div>\n        {/* Render the edit button */}\n        <h1 data-wio-id={ supplyItem._meta.id }>\n          { RichText.asText(supplyItem.item_title) }\n        </h1>\n        <h2>The Problem</h2>\n        <div>\n            { RichText.asText(supplyItem.the_problem)}\n        </div>\n        <h2>Current Resources</h2>\n        <div>\n            { RichText.asText(supplyItem.current_us_resources)}\n        </div>\n        <img src={supplyItem.item_image.url} />\n      </div>\n    </div>\n  );\n}\n\nexport default (props) => {\n  // Define the Item content returned from Prismic\n  const doc = props.data.prismic.allMedical_supply_item_detaileds.edges.slice(0,1).pop();\n\n  if(!doc) return null;\n\n  return(\n    <Layout>\n      <ItemBody supplyItem={ doc.node } />\n    </Layout>\n  )\n}\n"],"sourceRoot":""}